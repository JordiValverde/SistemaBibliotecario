// <auto-generated />
using System;
using JLCS.SB.CapaDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JLCS.SB.CapaDatos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211012222651_CiudadCoordenadaImagenMigration")]
    partial class CiudadCoordenadaImagenMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JLCS.SB.CapaEntidad.AutorEntidad", b =>
                {
                    b.Property<int>("IdAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutorApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutorNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAutor");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.CiudadEntidad", b =>
                {
                    b.Property<int>("IdCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CiudadActual")
                        .HasColumnType("int");

                    b.Property<string>("NombreCiudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCiudad");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.CoordenadasMapsEntidad", b =>
                {
                    b.Property<int>("IdCoordenada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCoordenada");

                    b.ToTable("Coordenadas");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.ImagenEntidad", b =>
                {
                    b.Property<int>("IdImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdImagen");

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.LibroEntidad", b =>
                {
                    b.Property<int>("IdLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutorIdAutor")
                        .HasColumnType("int");

                    b.Property<int>("Casillero")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estante")
                        .HasColumnType("int");

                    b.Property<int>("IdAutor")
                        .HasColumnType("int");

                    b.Property<int>("IdPrestamoEstudio")
                        .HasColumnType("int");

                    b.Property<int>("IdPrestamoLibro")
                        .HasColumnType("int");

                    b.Property<int>("IdTema")
                        .HasColumnType("int");

                    b.Property<int>("NumeroEjemplares")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrestamoEstudioEntidadIdPrestamoEstudio")
                        .HasColumnType("int");

                    b.Property<int?>("PrestamoLibroEntidadIdPrestamoLibro")
                        .HasColumnType("int");

                    b.Property<int?>("TemaIdTema")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLibro");

                    b.HasIndex("AutorIdAutor");

                    b.HasIndex("PrestamoEstudioEntidadIdPrestamoEstudio");

                    b.HasIndex("PrestamoLibroEntidadIdPrestamoLibro");

                    b.HasIndex("TemaIdTema");

                    b.ToTable("Libro");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.PrestamistaEntidad", b =>
                {
                    b.Property<int>("IdPrestamista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<int>("IdPrestamosEstudio")
                        .HasColumnType("int");

                    b.Property<int>("IdPrestamosLibro")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPrestamista");

                    b.ToTable("Prestamista");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.PrestamoEstudioEntidad", b =>
                {
                    b.Property<int>("IdPrestamoEstudio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DniPrestamista")
                        .HasColumnType("int");

                    b.Property<int>("DniUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPrestamista")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrestamistaIdPrestamista")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioEntidadIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdPrestamoEstudio");

                    b.HasIndex("PrestamistaIdPrestamista");

                    b.HasIndex("UsuarioEntidadIdUsuario");

                    b.ToTable("PrestamoEstudio");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.PrestamoLibroEntidad", b =>
                {
                    b.Property<int>("IdPrestamoLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DniPrestamista")
                        .HasColumnType("int");

                    b.Property<int>("DniUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinPrestamo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicioPrestamo")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPrestamista")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionFin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrestamistaIdPrestamista")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioEntidadIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdPrestamoLibro");

                    b.HasIndex("PrestamistaIdPrestamista");

                    b.HasIndex("UsuarioEntidadIdUsuario");

                    b.ToTable("PrestamoLibro");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.SancionEntidad", b =>
                {
                    b.Property<int>("IdSancion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("SancionFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SancionInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioEntidadIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdSancion");

                    b.HasIndex("UsuarioEntidadIdUsuario");

                    b.ToTable("Sancion");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.TemaEntidad", b =>
                {
                    b.Property<int>("IdTema")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tema")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTema");

                    b.ToTable("Tema");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.UsuarioEntidad", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.LibroEntidad", b =>
                {
                    b.HasOne("JLCS.SB.CapaEntidad.AutorEntidad", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorIdAutor");

                    b.HasOne("JLCS.SB.CapaEntidad.PrestamoEstudioEntidad", null)
                        .WithMany("Libros")
                        .HasForeignKey("PrestamoEstudioEntidadIdPrestamoEstudio");

                    b.HasOne("JLCS.SB.CapaEntidad.PrestamoLibroEntidad", null)
                        .WithMany("Libros")
                        .HasForeignKey("PrestamoLibroEntidadIdPrestamoLibro");

                    b.HasOne("JLCS.SB.CapaEntidad.TemaEntidad", "Tema")
                        .WithMany()
                        .HasForeignKey("TemaIdTema");

                    b.Navigation("Autor");

                    b.Navigation("Tema");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.PrestamoEstudioEntidad", b =>
                {
                    b.HasOne("JLCS.SB.CapaEntidad.PrestamistaEntidad", "Prestamista")
                        .WithMany()
                        .HasForeignKey("PrestamistaIdPrestamista");

                    b.HasOne("JLCS.SB.CapaEntidad.UsuarioEntidad", null)
                        .WithMany("PrestamosEstudio")
                        .HasForeignKey("UsuarioEntidadIdUsuario");

                    b.Navigation("Prestamista");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.PrestamoLibroEntidad", b =>
                {
                    b.HasOne("JLCS.SB.CapaEntidad.PrestamistaEntidad", "Prestamista")
                        .WithMany()
                        .HasForeignKey("PrestamistaIdPrestamista");

                    b.HasOne("JLCS.SB.CapaEntidad.UsuarioEntidad", null)
                        .WithMany("PrestamosLibro")
                        .HasForeignKey("UsuarioEntidadIdUsuario");

                    b.Navigation("Prestamista");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.SancionEntidad", b =>
                {
                    b.HasOne("JLCS.SB.CapaEntidad.UsuarioEntidad", null)
                        .WithMany("Sanciones")
                        .HasForeignKey("UsuarioEntidadIdUsuario");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.PrestamoEstudioEntidad", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.PrestamoLibroEntidad", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("JLCS.SB.CapaEntidad.UsuarioEntidad", b =>
                {
                    b.Navigation("PrestamosEstudio");

                    b.Navigation("PrestamosLibro");

                    b.Navigation("Sanciones");
                });
#pragma warning restore 612, 618
        }
    }
}
